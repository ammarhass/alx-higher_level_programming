>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided ([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided([[2, 1, 5], [9, 4]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([['s', 'q', 'n'], [4, 'a', 6]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([[3, 4, 2]])
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided([[5, 4], [1, 2]], -2)
[[-2.5, -2.0], [-0.5, -1.0]]

>>> matrix_divided(1234, 4)
Traceback (most recent call last):
..
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[6, 5, 12],[22, 6, 1]], "b")
Traceback (most recent call last):
...
TypeError: div must be a number



